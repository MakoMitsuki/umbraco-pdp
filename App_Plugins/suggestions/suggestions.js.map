{"version":3,"file":"suggestions.js","sources":["../../suggestions/src/suggestions-property-editor-ui.element.ts"],"sourcesContent":["import { LitElement, html, css, customElement, property, state, ifDefined } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbPropertyEditorUiElement, UmbPropertyValueChangeEvent, type UmbPropertyEditorConfigCollection } from \"@umbraco-cms/backoffice/property-editor\";\nimport { UMB_NOTIFICATION_CONTEXT, UmbNotificationDefaultData} from \"@umbraco-cms/backoffice/notification\";\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\nimport { UMB_MODAL_MANAGER_CONTEXT, UMB_CONFIRM_MODAL,} from \"@umbraco-cms/backoffice/modal\";\n\n@customElement('my-suggestions-property-editor-ui')\nexport default class MySuggestionsPropertyEditorUIElement extends UmbElementMixin((LitElement)) implements UmbPropertyEditorUiElement {\n    @property({ type: String })\n    public value = \"\";\n\n    @state()\n      private _suggestions = [\n        'You should take a break',\n        'I suggest that you visit the Eiffel Tower',\n        'How about starting a book club today or this week?',\n        'Are you hungry?',\n      ];\n\n    @state()\n    private _disabled?: boolean;\n\n    @state()\n    private _placeholder?: string;\n\n    @state()\n    private _maxChars?: number;\n\n    @property({ attribute: false })\n    public set config(config: UmbPropertyEditorConfigCollection) {\n      this._disabled = config.getValueByAlias(\"disabled\");\n      this._placeholder = config.getValueByAlias(\"placeholder\");\n      this._maxChars = config.getValueByAlias(\"maxChars\");\n    }\n\n      #onInput(e: InputEvent) {\n        this.value = (e.target as HTMLInputElement).value;\n        this.#dispatchChangeEvent();\n      }\n    \n      #dispatchChangeEvent() {\n        this.dispatchEvent(new UmbPropertyValueChangeEvent());\n      }\n\n      #onSuggestion() {\n        const randomIndex = (this._suggestions.length * Math.random()) | 0;\n        this.value = this._suggestions[randomIndex];\n        this.#dispatchChangeEvent();\n      }\n\n    _modalManagerContext?: typeof UMB_MODAL_MANAGER_CONTEXT.TYPE;\n    _notificationContext?: typeof UMB_NOTIFICATION_CONTEXT.TYPE;\n\n    constructor() {\n        super();\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n            this._modalManagerContext = instance;\n        });\n\n        this.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\n            this._notificationContext = instance;\n        });\n    }\n\n    #onTextTrim() {\n        if (!this._maxChars) return;\n        if (!this.value || (this.value as string).length <= this._maxChars) {\n            const data: UmbNotificationDefaultData = {\n                message: `Nothing to trim!`,\n            };\n            this._notificationContext?.peek(\"danger\", { data });\n            return;\n        }\n\n        const trimmed = (this.value as string).substring(0, this._maxChars);\n        const modalHandler = this._modalManagerContext?.open(this, UMB_CONFIRM_MODAL,\n            {\n                data: {\n                    headline: `Trim text`,\n                    content: `Do you want to trim the text to \"${trimmed}\"?`,\n                    color: \"danger\",\n                    confirmLabel: \"Trim\",\n                }\n            }\n        );\n        modalHandler?.onSubmit().then(() => {\n            this.value = trimmed;\n            this.#dispatchChangeEvent();\n            const data: UmbNotificationDefaultData = {\n                headline: `Text trimmed`,\n                message: `You trimmed the text!`,\n            };\n            this._notificationContext?.peek(\"positive\", { data });\n        }, null);\n    }\n\n      render() {\n        return html`\n          <uui-input\n            id=\"suggestion-input\"\n            class=\"element\"\n            label=\"text input\"\n            placeholder=${ifDefined(this._placeholder)}\n            maxlength=${ifDefined(this._maxChars)}\n            .value=${this.value || \"\"}\n            @input=${this.#onInput}\n          >\n          </uui-input>\n          <div id=\"wrapper\">\n            <uui-button\n              id=\"suggestion-button\"\n              class=\"element\"\n              look=\"primary\"\n              label=\"give me suggestions\"\n              ?disabled=${this._disabled}\n              @click=${this.#onSuggestion}\n            >\n              Give me suggestions!\n            </uui-button>\n            <uui-button\n                id=\"suggestion-trimmer\"\n                class=\"element\"\n                look=\"outline\"\n                label=\"Trim text\"\n                @click=${this.#onTextTrim}\n                >\n                Trim text\n            </uui-button>\n          </div>\n        `;\n      }\n\n    static styles = [\n        css`\n          #wrapper {\n            margin-top: 10px;\n            display: flex;\n            gap: 10px;\n          }\n          .element {\n            width: 100%;\n          }\n        `,\n      ];\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'my-suggestions-property-editor-ui': MySuggestionsPropertyEditorUIElement;\n    }\n}"],"names":["_MySuggestionsPropertyEditorUIElement_instances","onInput_fn","dispatchChangeEvent_fn","onSuggestion_fn","onTextTrim_fn","MySuggestionsPropertyEditorUIElement","UmbElementMixin","LitElement","__privateAdd","UMB_MODAL_MANAGER_CONTEXT","instance","UMB_NOTIFICATION_CONTEXT","config","html","ifDefined","__privateMethod","e","UmbPropertyValueChangeEvent","randomIndex","data","_a","trimmed","modalHandler","_b","UMB_CONFIRM_MODAL","css","__decorateClass","property","state","customElement"],"mappings":"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"}